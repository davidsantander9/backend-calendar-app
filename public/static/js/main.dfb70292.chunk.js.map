{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","checkingFinish","login","user","logout","eventLogout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","console","log","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","preapareEvents","ev","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","_id","error","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","res","props","to","PrivateRoute","location","pathname","AppRouter","uidCheck","undefined","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"mNACaA,EAEI,kBAFJA,EAGK,mBAHLA,EAMI,kBANJA,EAOO,qBAPPA,EAQI,uBARJA,EASc,6BATdA,EAUK,wBAVLA,EAWK,wBAXLA,EAYI,uBAZJA,EAeU,qCAfVA,EAiBE,eAjBFA,EAoBG,gBCnBVC,EAAe,CACjBC,WAAW,G,QCDTD,EAAe,CACjBE,OAAQ,GACRC,YAAa,MCFXH,EAAe,CACjBI,UAAU,GCKDC,EAAcC,YAAgB,CACvCC,GHDqB,WAAqC,IAAnCC,EAAkC,uDAA1BR,EAAcS,EAAY,uCAEzD,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGnB,KAAKF,EACD,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGnB,QACI,OAAOO,IGdfG,SFF2B,WAAqC,IAAnCH,EAAkC,uDAA1BR,EAAcS,EAAY,uCAE/D,OAASA,EAAOC,MAEZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAaM,EAAOG,UAG5B,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAInB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIL,YAAa,OAIrB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAC,OAAMA,EAAEC,KAAON,EAAOG,QAAQG,GAAON,EAAOG,QAAUE,OAInE,KAAKf,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAC,OAAMA,EAAEC,KAAOP,EAAML,YAAYY,MAEtCZ,YAAa,OAGrB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAKO,EAAOG,WAE3B,KAAKb,EACD,sBACOC,GAIX,QACI,OAAOQ,IEpDfS,KDLuB,WAAqC,IAAnCT,EAAkC,uDAA1BR,EAAcS,EAAY,uCAC3D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,uCACAS,GACAC,EAAOG,SAFd,IAGIR,UAAU,IAElB,KAAKL,EACD,OAAO,2BACAS,GADP,IAEIJ,UAAU,IAElB,KAAKL,EACD,MAAO,CACHK,UAAU,GAElB,QACI,OAAOI,MElBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAiBC,O,gDCRZC,EAAU,WAA0B,IAAxB1B,EAAuB,uDAAR,GAAQ,EAEhB2B,mBAAS3B,GAFO,mBAErC4B,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAW7B,IAIT+B,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,yBCrBlCK,EAAWC,+CAEJC,EAAoB,SAAEC,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAX,MAChDC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAe,QAAXE,EACOE,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAKrBQ,EAAiB,SAAET,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAX,MAC7CC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAOD,EAAK,CACfD,SACAG,QAAQ,CACJ,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,MCuC5BY,EAAiB,iBAAO,CAAEzC,KAAMX,IAEhCqD,EAAQ,SAAEC,GAAF,MAAa,CACvB3C,KAAMX,EACNa,QAASyC,IAYPC,EAAS,iBAAO,CAAE5C,KAAMX,IAEjBwD,EAAc,iBAAO,CAAE7C,KAAMX,ICrF7ByD,G,MAAc,WAEvB,IAAMC,EAAWC,cAFY,EAIuBhC,EAAQ,CACxDiC,OAAQ,kBACRC,UAAW,WANc,mBAIrBC,EAJqB,KAIJC,EAJI,OAS6BpC,EAAQ,CAC9DqC,MAAO,OACPC,OAAQ,iBACRC,WAAY,SACZC,WAAY,WAba,mBASrBC,EATqB,KASDC,EATC,KAiBpBT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UACRG,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAoBpC,OACI,yBAAKG,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,uCACA,0BAAMC,SAvBF,SAACxD,GDvBC,IAAEyD,EAAOC,ECwB3B1D,EAAE2D,iBACFhB,GDzBoBc,ECyBCZ,EDzBMa,ECyBEZ,EDxBjC,uCAAO,WAAOH,GAAP,iBAAAiB,EAAA,sEAEgBrC,EAAkB,OAAQ,CAAEkC,QAAOC,YAAY,QAF/D,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGhC,EAHH,QAOOiC,IACN5B,aAAa6B,QAAQ,QAASlC,EAAKI,OACnCC,aAAa6B,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUL,EAAM,CACZ6B,IAAKrC,EAAKqC,IACVhD,KAAMW,EAAKX,SAIfiD,IAAKC,KAAK,QAASvC,EAAKwC,IAAK,SAjB9B,2CAAP,0DC8CoB,yBAAKf,UAAU,cACX,2BACI3D,KAAK,OACL2D,UAAU,eACVgB,YAAY,SACZpD,KAAO,SACPqD,SAAaxB,KAGrB,yBAAKO,UAAU,cACX,2BACI3D,KAAK,WACL2D,UAAU,eACVgB,YAAY,gBACZpD,KAAO,YACPqD,SAAaxB,KAGrB,yBAAKO,UAAU,cACX,2BACI3D,KAAK,SACL2D,UAAU,YACVnC,MAAM,aAMtB,yBAAKmC,UAAU,yBACX,wCACA,0BAAMC,SAhDC,SAACxD,GAEpB,GADAA,EAAE2D,iBACER,IAAeC,EACf,OAAOgB,IAAKC,KAAK,QAAS,wBDPT,IAACZ,EAAOC,EAAUvC,ECSnCwB,GDTkBc,ECSMP,EDTCQ,ECSOP,EDTGhC,ECSS8B,EDRpD,uCAAO,WAAON,GAAP,iBAAAiB,EAAA,sEAEgBrC,EAAkB,WAAY,CAAEkC,QAAOC,WAAUvC,QAAQ,QAFzE,cAEG0C,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGhC,EAHH,QAKOiC,IACN5B,aAAa6B,QAAQ,QAASlC,EAAKI,OACnCC,aAAa6B,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUL,EAAM,CACZ6B,IAAKrC,EAAKqC,IACVhD,KAAMW,EAAKX,SAIfiD,IAAKC,KAAK,QAASvC,EAAKwC,IAAK,SAf9B,2CAAP,0DCoDoB,yBAAKf,UAAU,cACX,2BACI3D,KAAK,OACL2D,UAAU,eACVgB,YAAY,SACZpD,KAAO,QACPqD,SAAalB,KAGrB,yBAAKC,UAAU,cACX,2BACI3D,KAAK,QACL2D,UAAU,eACVgB,YAAY,SACZpD,KAAO,SACPqD,SAAalB,KAGrB,yBAAKC,UAAU,cACX,2BACI3D,KAAK,WACL2D,UAAU,eACVgB,YAAY,gBACZpD,KAAO,aACPqD,SAAalB,KAIrB,yBAAKC,UAAU,cACX,2BACI3D,KAAK,WACL2D,UAAU,eACVgB,YAAY,0BACZpD,KAAO,aACPqD,SAAalB,KAIrB,yBAAKC,UAAU,cACX,2BACI3D,KAAK,SACL2D,UAAU,YACVnC,MAAM,wB,yBCzHzBqD,EAAS,WAElB,IAAM9B,EAAWC,cAETzB,EAASuD,aAAa,SAAAhF,GAAK,OAAIA,EAAMS,QAArCgB,KAOR,OACI,yBAAKoC,UAAU,mCACX,0BAAMA,UAAU,gBACVpC,GAGN,4BACIoC,UAAU,yBACVoB,QAbS,WACjBC,QAAQC,IAAI,OACZlC,GFwEG,SAAEA,GACLR,aAAa2C,QACbnC,EAAUF,KACVE,EAAUH,UE9DF,uBAAGe,UAAU,wBACb,2CC1BHwB,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,EAAgB,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAEpBK,EAAgBL,EAAhBK,MAAOxD,EAASmD,EAATnD,KAEf,OACI,6BACI,oCAAWwD,EAAX,KACA,mCAAUxD,EAAKpB,KAAf,O,wCCLC6E,GAAc,iBAAO,CAAEpG,KAAMX,ICF5BgH,GAAiB,WAAoB,IAAlB7G,EAAiB,uDAAR,GACtC,OAAOA,EAAOW,KACV,SAAEmG,GAAF,mBAAC,eACMA,GADP,IAEIC,IAAKC,IAAQF,EAAGC,KAAME,SACtBC,MAAOF,IAAQF,EAAGI,OAAQD,eC2BhCE,GAAc,SAACb,GAAD,MAAY,CAC5B9F,KAAMX,EACNa,QAAS4F,IAQAc,GAAwB,iBAAO,CAAE5G,KAAMX,IAoB9CwH,GAAe,SAAEf,GAAF,MAAc,CAC/B9F,KAAMX,EACNa,QAAS4F,IA0CPgB,GAAe,iBAAO,CAAE9G,KAAMX,IAGvB0H,GAAc,SAAEvH,GAAF,MAAe,CACtCQ,KAAMX,EACNa,QAASV,ICrGPwH,GAAe,CACjBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAG9BC,KAAMC,cAAc,SAEpB,IAAMC,GAAMlB,MAASmB,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAG,SAE9BG,GAAY,CACd7B,MAAO,GACP8B,MAAO,GACPvB,MAAOgB,GAAIjB,SACXF,IAAKuB,GAASrB,UAILyB,GAAgB,WAAO,IAExB3I,EAAcuF,aAAa,SAAAhF,GAAK,OAAIA,EAAMD,MAA1CN,UACAE,EAAgBqF,aAAa,SAAAhF,GAAK,OAAIA,EAAMG,YAA5CR,YACFsD,EAAWC,cAJc,EAMK/B,mBAAUyG,GAAIjB,UANnB,mBAMvB0B,EANuB,KAMZC,EANY,OAOCnH,mBAAU6G,GAASrB,UAPpB,mBAOvB4B,EAPuB,KAOdC,EAPc,OAQOrH,oBAAS,GARhB,mBAQvBsH,EARuB,KAQXC,EARW,OAUKvH,mBAAU+G,IAVf,mBAUxBS,EAVwB,KAUZC,EAVY,KAYvBT,EAA6BQ,EAA7BR,MAAO9B,EAAsBsC,EAAtBtC,MAAOO,EAAe+B,EAAf/B,MAAOH,EAAQkC,EAARlC,IAE7BoC,qBAAU,WAEFD,EADCjJ,GAGcuI,MAEpB,CAACvI,EAAaiJ,IAIjB,IAAMrH,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBoH,EAAc,2BACPD,GADM,kBAERnH,EAAOC,KAAOD,EAAOE,UAKxBoH,EAAa,WAEf7F,EHhE2B,CAAE/C,KAAMX,IGiEnC0D,EAAU6D,MACV8B,EAAeV,KA8CnB,OACI,kBAAC,KAAD,CACEa,OAAStJ,EACTuJ,eAAiBF,EACjBG,MAAQ/B,GACRgC,eAAiB,IACjBrF,UAAU,QACVsF,iBAAiB,eAEf,gCAAQxJ,EAAc,gBAAiB,eAAvC,KACA,6BACA,0BACIkE,UAAU,YACVC,SAxCa,SAACxD,GACtBA,EAAE2D,iBAEF,ID/C0B+B,EC+CpBoD,EAAc1C,IAAQE,GACtByC,EAAY3C,IAAQD,GAE1B,OAAK2C,EAAYE,cAAeD,GACrB3E,IAAKC,KAAK,QAAQ,sDAAuD,SAG/E0B,EAAMkD,OAAOC,OAAS,EAChBd,GAAc,IAIrBzF,EADCtD,GD1DqBqG,EC2DM2C,ED1DpC,uCAAO,WAAO1F,GAAP,iBAAAiB,EAAA,+EAEoB3B,EAAe,UAAD,OAAayD,EAAMzF,IAAOyF,EAAO,OAFnE,cAEO7B,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOhC,EAHP,QAKWiC,GACNpB,EAAU8D,GAAaf,IAEvBtB,IAAKC,KAAK,QAASvC,EAAKwC,IAAK,SARlC,kDAYCM,QAAQC,IAAR,MAZD,0DAAP,uDAzC4B,SAAEa,GAC9B,8CAAO,WAAO/C,EAAUwG,GAAjB,uBAAAvF,EAAA,+DAEmBuF,IAAWhJ,KAAzBgE,EAFL,EAEKA,IAAKhD,EAFV,EAEUA,KAFV,SAIgBc,EAAgB,SAAUyD,EAAO,QAJjD,cAIG7B,EAJH,gBAKgBA,EAAKC,OALrB,OAKGhC,EALH,OAOH,IACQA,EAAKiC,KACL2B,EAAMzF,GAAK6B,EAAK4D,MAAMzF,GACtByF,EAAMnD,KAAO,CACT6G,IAAKjF,EACLhD,KAAMA,GAEVwB,EAAU4D,GAAab,KAG7B,MAAO2D,GACLzE,QAAQC,IAAIwE,GAlBb,2CAAP,wDCoGkBC,CAAiB,eAAMjB,KAIrCD,GAAc,QACdI,OAqBQ,yBAAKjF,UAAU,cACX,sDACA,kBAAC,KAAD,CACIiB,SA9DU,SAAExE,GAC5BgI,EAAchI,GACdsI,EAAc,2BACPD,GADM,IAET/B,MAAOtG,MA2DKoB,MAAQ2G,EACRxE,UAAU,kBAIlB,yBAAKA,UAAU,cACX,mDACA,kBAAC,KAAD,CACIiB,SA/DQ,SAAExE,GAC1BkI,EAAYlI,GACZsI,EAAc,2BACPD,GADM,IAETlC,IAAKnG,MA4DOoB,MAAQ6G,EACRsB,QAAUxB,EACVxE,UAAU,kBAIlB,6BACA,yBAAKA,UAAU,cACX,iDACA,2BACI3D,KAAK,OACL2D,UAAS,wBAAqB4E,GAAc,aAAnC,KACT5D,YAAY,uBACZpD,KAAK,QACLqI,aAAa,MACbpI,MAAQ2E,EACRvB,SAAWvD,IAEf,2BAAOhB,GAAG,YAAYsD,UAAU,wBAAhC,6BAGJ,yBAAKA,UAAU,cACX,8BACI3D,KAAK,OACL2D,UAAU,eACVgB,YAAY,QACZkF,KAAK,IACLtI,KAAK,QACLC,MAAQyG,EACRrD,SAAWvD,IAEf,2BAAOhB,GAAG,YAAYsD,UAAU,wBAAhC,6BAGJ,4BACI3D,KAAK,SACL2D,UAAU,qCAEV,uBAAGA,UAAU,gBACb,8CCrLPmG,I,cAAY,WAErB,IAAM/G,EAAWC,cAOjB,OACI,4BACIW,UAAU,sBACVoB,QARe,WACnBhC,EAAUqD,QASN,uBAAGzC,UAAU,mBCdZoG,GAAiB,WAE1B,IAAMhH,EAAWC,cAMjB,OACI,4BACIW,UAAU,4BACVoB,QAPa,WACjBhC,EH+EJ,uCAAO,WAAOA,EAAUwG,GAAjB,mBAAAvF,EAAA,6DAEK3D,EAAOkJ,IAAWtJ,SAASR,YAA3BY,GAFL,kBAKoBgC,EAAe,UAAD,OAAahC,GAAO,GAAI,UAL1D,cAKO4D,EALP,gBAMoBA,EAAKC,OANzB,QAMOhC,EANP,QAQWiC,GACNpB,EAAU+D,MAEVtC,IAAKC,KAAK,QAASvC,EAAKwC,IAAK,SAXlC,kDAeCM,QAAQC,IAAR,MAfD,0DAAP,2DGvEQ,uBAAGtB,UAAU,iBACb,mDCAZ6C,IAAOwD,OAAO,MAEd,IAAMC,GAAYC,YAAgB1D,KAErB2D,GAAiB,WAE1B,IAAMpH,EAAWC,cAFe,EAGA8B,aAAa,SAAAhF,GAAK,OAAIA,EAAMG,YAApDT,EAHwB,EAGxBA,OAAQC,EAHgB,EAGhBA,YACR8E,EAAQO,aAAa,SAAAhF,GAAK,OAAIA,EAAMS,QAApCgE,IAJwB,EAOAtD,mBAAUsB,aAAaC,QAAQ,aAAe,SAP9C,mBAOzB4H,EAPyB,KAOfC,EAPe,KAShC1B,qBAAU,WACN5F,EJuCJ,uCAAO,WAAOA,GAAP,mBAAAiB,EAAA,+EAGoB3B,EAAe,UAHnC,cAGO4B,EAHP,gBAIoBA,EAAKC,OAJzB,OAIOhC,EAJP,OAMO1C,EAAS6G,GAAgBnE,EAAK1C,QAEpCuD,EAAUgE,GAAavH,IARxB,kDAUCwF,QAAQC,IAAR,MAVD,0DAAP,yDItCG,CAAClC,IAsCJ,OACI,yBAAKY,UAAU,mBACX,kBAAC,EAAD,MAGA,kBAAC,IAAD,CACIsG,UAAYA,GACZzK,OAASA,EACT8K,cAAc,QACdC,YAAY,MACZpF,SAAWA,EACXqF,gBA3Ba,SAAE1E,EAAOY,EAAOH,EAAKkE,GAW1C,MAAO,CACH1B,MAVU,CACV2B,gBAAkBnG,IAAQuB,EAAMnD,KAAK6G,IAAQ,UAAY,OACzDmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAqBHC,mBA/CU,SAAC3K,GAEnB2C,EAAUqD,OA8CF4E,cA3CU,SAAC5K,GACnB2C,EJHkC,CACtC/C,KAAMX,EACNa,QIC8BE,KA2ClB6K,OAxCS,SAAC7K,GAClBiK,EAAYjK,GACZmC,aAAa6B,QAAQ,WAAYhE,IAuCzB8K,aApCS,SAAC9K,GAClB2C,EAAU6D,OAoCFuE,YAAa,EACbC,KAAOhB,EACPiB,WAAY,CACRvF,MAAOI,KAMf,kBAAC,GAAD,MAIKzG,GAAgB,kBAAC,GAAD,MAIrB,kBAAC,GAAD,Q,SCpGC6L,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDACF,OACI,kBAAC,IAAD,iBACQA,EADR,CAEID,UAAY,SAACE,GAAD,OACLJ,EAED,kBAAC,IAAD,CAAUK,GAAG,MADb,kBAACJ,EAAcG,QCVpBE,GAAe,SAAC,GAItB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAIF,OAFAnJ,aAAa6B,QAAQ,WAAYsH,EAAII,SAASC,UAG1C,kBAAC,IAAD,iBACQL,EADR,CAEID,UAAY,SAACE,GAAD,OACNJ,EACA,kBAACC,EAAcG,GACf,kBAAC,IAAD,CAAUC,GAAG,gBCJlBI,GAAY,WAErB,IAAMjJ,EAAWC,cAFU,EAID8B,aAAa,SAAAhF,GAAK,OAAIA,EAAMS,QAA9Cb,EAJmB,EAInBA,SAAU6E,EAJS,EAITA,IACZ0H,OAAmBC,IAAR3H,EAAoB,KAAOA,EAM5C,OAJAoE,qBAAU,WACN5F,EdgCJ,uCAAO,WAAOA,GAAP,iBAAAiB,EAAA,sEAEgB3B,EAAe,cAF/B,cAEG4B,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGhC,EAHH,QAKOiC,IACN5B,aAAa6B,QAAQ,QAASlC,EAAKI,OACnCC,aAAa6B,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUL,EAAM,CACZ6B,IAAKrC,EAAKqC,IACVhD,KAAMW,EAAKX,SAIfwB,EAAUN,KAfX,2CAAP,yDc/BG,CAACM,IAECrD,EACO,uCAIR,kBAAC,IAAD,KACI,6BACA,kBAAC,IAAD,KACQ,kBAAC,GAAD,CACIyM,OAAK,EACLC,KAAK,SACLX,UAAY3I,EACZyI,kBAAoBU,IAExB,kBAAC,GAAD,CACIE,OAAK,EACLZ,kBAAoBU,EACpBG,KAAK,IACLX,UAAYtB,KAChB,kBAAC,IAAD,CAAUyB,GAAG,UCtCpBS,GAAc,WACvB,OACI,kBAAC,IAAD,CAAUzL,MAAQA,GACd,kBAAC,GAAD,Q,OCHZ0L,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.dfb70292.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventStartAddNew: '[event] Start Add new',\n    eventAddNew: '[event] Add new',\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Event loaded',\n\n    authCheking: '[auth] Checking login state',\n    authChekingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] login',\n    authStartRegister: '[auth] Start register',\n    authStartTokinRenew: '[auth] Start tokin Renew', \n    authLogout: '[auth] Logout',  \n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        \n        case types.eventLoaded:\n            return{\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return{\n                ...initialState\n            }\n        \n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n            }\n        case types.authChekingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n})\n \n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl =  process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = ( endpoint, data, method='GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if( method === 'GET'){\n        return fetch( url );\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data ),\n        });\n    }\n}\n\nexport const fetchWithToken = ( endpoint, data, method='GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if( method === 'GET'){\n        return fetch( url, {\n            method,\n            headers:{\n                'x-token': token\n            }\n        } );\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data ),\n        });\n    }\n}\n ","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\n\n\nexport const startLogin = ( email, password) => {\n    return async( dispatch )=>{\n\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        \n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) )\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n\n        }\n\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async( dispatch )=>{\n\n        const resp = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) )\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n\n        }\n\n    }\n}\n\nexport const startCheckin= () => {\n    return async( dispatch )=>{\n\n        const resp = await fetchWithToken('auth/renew');\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) )\n\n        } else {\n            dispatch( checkingFinish() )\n        }\n\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authChekingFinish });\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })\n\nexport const eventLogout = () => ({ type: types.eventLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'david@gmail.com',\n        lPassword: 'abc123'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Luis',\n        rEmail: 'luis@gmail.com',\n        rPassword1: 'abc123',\n        rPassword2: 'abc123',\n    });\n\n    \n    const  { lEmail, lPassword } = formLoginValues;\n    const  { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLogin(lEmail, lPassword) );       \n    }\n\n    \n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Passwords must match');\n        } else {\n            dispatch( startRegister(rEmail, rPassword1, rName ) );       \n        }\n\n    }\n\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit = { handleLogin } >\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name = \"lEmail\"\n                                onChange = { handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name = \"lPassword\"\n                                onChange = { handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit = { handleRegister } >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name = \"rName\"\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name = \"rEmail\"\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name = \"rPassword1\"\n                                onChange = { handleRegisterInputChange } \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name = \"rPassword2\"\n                                onChange = { handleRegisterInputChange } \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        console.log('hey')\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick= { handleLogout }\n                >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from 'moment';\n\nexport const  preapareEvents = ( events = [] ) => {\n    return events.map( \n        ( ev ) => ({\n            ...ev,\n            end: moment( ev.end ).toDate(),\n            start: moment( ev.start ).toDate(),\n        })\n    )\n}","import Swal from \"sweetalert2\";\n\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { preapareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n \n        const { uid, name } = getState().auth;\n\n        const resp = await fetchWithToken( 'events', event, 'POST' );\n        const body = await resp.json();\n\n        try {\n            if( body.ok ){\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch( eventAddNew( event ))\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n\n        \n        \n        \n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate = ( event ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchWithToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( eventUpdated(event) )\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartLoading = () => {\n    return async( dispatch ) => {\n\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n\n            const events = preapareEvents( body.events );\n\n            dispatch( eventLoaded( events ) );\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nexport const eventStartDeleted = () => {\n    return async( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchWithToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( eventDeleted() )\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew( { ...formValues } ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDeleted() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n  \n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        dispatch( eventStartLoading() );\n    }, [dispatch])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: (uid === event.user._id ) ? '#367CF7' : '#ccc',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...res\n}) => {\n    return (\n        <Route \n            {...res}\n            component={ (props) => (\n                ( !isAuthenticated )\n                ? <Component {...props}/>\n                : <Redirect to=\"/\" />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...res\n}) => {\n    \n    localStorage.setItem('lastPath', res.location.pathname );\n\n    return (\n        <Route \n            {...res}\n            component={ (props) => (\n                ( isAuthenticated )\n                ? <Component {...props}/>\n                : <Redirect to=\"/login\" />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startCheckin } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector( state => state.auth );\n    const uidCheck = uid === undefined ? null : uid\n\n    useEffect(() => {\n        dispatch( startCheckin() );\n    }, [dispatch]);\n\n    if ( checking ) {\n        return (<h5>Wait...</h5>)\n    } \n\n    return (\n        <Router>\n            <div>\n            <Switch>\n                    <PublicRoute\n                        exact \n                        path='/login' \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uidCheck }\n                        />\n                    <PrivateRoute \n                        exact \n                        isAuthenticated={ !!uidCheck }\n                        path='/' \n                        component={ CalendarScreen }/>\n                    <Redirect to='/' />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}